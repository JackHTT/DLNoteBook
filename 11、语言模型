一、语言模型
一段自然语言文本可以看作是一个离散的时间序列，给定一个长度为T的词的序列w1,w2,w3,...,wT，
语言模型的目标就是评估该序列是否合理，即计算该序列的概率: P(w1,w2,w3,..,wT)
本节介绍基于统计的语言模型，主要是n元语法(n-gram)

语言模型
假设序列w1,w2,w3,...,wT中的每个词是依次生成的，我们有
P(w1,w2,..,wT) = P(wt|w1,w2,..,wt-1)（t从1到T）T项依次相乘.
例如，一段含有4个词的文本序列的概率: P(w1,w2,w3,w4) = P(w1)*P(w2|w1)*P(w3|w1,w2)*P(w4|w1,w2,w3)
会多次计算在前序文本的基础上当前词发生的条件概率。
语言模型的参数就是词的概率以及给定前几个词情况下的条件概率。
设训练数据集为一个大型文本语料库，如维基百科的所有条目，词的概率可以通过该词在训练数据集中的相对词频来计算，
例如，w1的概率可以计算为:  P(w1) = n(w1)/n  
其中n(w1)为语料库中以w1作为第一个词的文本的数量，n为语料库中文本的总数量。
类似的，给定w1情况下，w2的条件概率可以计算为:   P(w2|w1) = n(w1,w2)/n(w1) 其中n(w1,w2)为语料库中以w1作为第一个词，w2作为第二个词的文本的数量。

n元语法
序列长度增加，计算和存储多个词共同出现的概率的复杂度会呈指数级增加。
n元语法通过马尔可夫假设简化模型，马尔可夫假设是指一个词的出现只与前面n个词相关，即n阶马尔可夫链(Markov chain of order n).
如果n=1,那么有P(w3|w1,w2)=P(w3|w2)，也就是说通过前n个词来预测当前词的条件概率。
n元语法是基于n-1阶马尔可夫链的概率语言模型，当n=1、2、3时，分别称作一元语法(unigram)、二元语法(bigram)、三元语法(trigram)
当n较小时，n元语法往往并不准确。例如，在一元语法中，由三个词组成的句子"你走先"和"你先走"的概率是一样的。
然而当n较大时，n元语法需要计算并存储大量的词频和多词相邻频率。

n元语法存在的缺陷： 1、参数空间过大  2、数据稀疏

时序数据的采样
在训练中我们需要每次随机读取小批量样本和标签，与前几章不同的是，时序数据的一个样本通常包含连续的字符，
可以认为训练集是当前字符，label是下一个字符。当时间步数为5时表示以5个字符为训练样本和label。
如果序列的长度为T，时间步数为n，那么一共有T-n个合法的样本，但是这些样本有大量的集合，我们通常采用更加高效的采样方式。
我们有两种方式对时序数据进行采样，分别是随机采样和相邻采样。

随机采样：每次从数据里随机采样一个小批量。其中批量大小batch_size是每个小批量的样本数，num_steps是每个样本所包含的时间步数。
在随机采样中，每个样本是原始序列上任意截取的一段序列，相邻的两个随机小批量在原始序列上的位置不一定相毗邻。

相邻采样：相邻的两个随机小批量在原始序列上的位置相毗邻。
对于训练数据的批量大小会对样本按批量数进行拆分，之后再进行采样。

